{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","state","filteredHeroes","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","catch","id","console","log","heroDeleted","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filters","filtersLoadingStatus","onSubmit","e","preventDefault","hero","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","height","label","renderFilters","HeroesFilters","activeFilter","filtersFetched","btnClass","active","App","initialState","heroes","reducer","action","filter","item","newCreatedHeroList","newHeroList","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f0be76a.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n        <button\n          onClick={onDelete}\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError,\n  heroDeleted,\n} from \"../../actions\";\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n  const { filteredHeroes, heroesLoadingStatus } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(heroesFetching());\n    request(\"http://localhost:3001/heroes\")\n      .then((data) => dispatch(heroesFetched(data)))\n      .catch(() => dispatch(heroesFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then((data) => console.log(data, \"Deleted\"))\n        .then(dispatch(heroDeleted(id)))\n        .catch((err) => console.log(err));\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Loading error</h5>;\n  }\n\n  const renderHeroesList = (arr) => {\n    if (arr.length === 0) {\n      return (\n        <CSSTransition timeout={0} classNames=\"hero\">\n          <h5 className=\"text-center mt-5\">No heroes yet</h5>\n        </CSSTransition>\n      );\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <CSSTransition key={id} timeout={500} classNames=\"hero\">\n          <HeroesListItem key={id} onDelete={() => onDelete(id)} {...props} />\n        </CSSTransition>\n      );\n    });\n  };\n\n  const elements = renderHeroesList(filteredHeroes);\n  return (\n    <TransitionGroup component=\"ul\">\n      <ul>{elements}</ul>\n    </TransitionGroup>\n  );\n};\n\nexport default HeroesList;\n","export const heroesFetching = () => {\n  return {\n    type: \"HEROES_FETCHING\",\n  };\n};\n\nexport const heroesFetched = (heroes) => {\n  return {\n    type: \"HEROES_FETCHED\",\n    payload: heroes,\n  };\n};\n\nexport const heroesFetchingError = () => {\n  return {\n    type: \"HEROES_FETCHING_ERROR\",\n  };\n};\n\nexport const filtersFetching = () => {\n  return {\n    type: \"FILTERS_FETCHING\",\n  };\n};\n\nexport const filtersFetched = (filters) => {\n  return {\n    type: \"FILTERS_FETCHED\",\n    payload: filters,\n  };\n};\n\nexport const filtersFetchingError = () => {\n  return {\n    type: \"FILTERS_FETCHING_ERROR\",\n  };\n};\n\nexport const activeFilterChanged = (filter) => {\n  return {\n    type: \"ACTIVE_FILTER_CHANGED\",\n    payload: filter,\n  };\n};\n\nexport const heroCreated = (hero) => {\n  return {\n    type: \"HERO_CREATED\",\n    payload: hero,\n  };\n};\n\nexport const heroDeleted = (id) => {\n  return {\n    type: \"HERO_DELETED\",\n    payload: id,\n  };\n};\n","// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\nimport { useHttp } from \"../../hooks/http.hook\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { heroCreated } from \"../../actions\";\n\nconst HeroesAddForm = () => {\n  //Состояние для контроля формы\n  const [heroName, setHeroName] = useState(\"\");\n  const [heroDescr, setHeroDescr] = useState(\"\");\n  const [heroElement, setHeroElement] = useState(\"\");\n\n  const { filters, filtersLoadingStatus } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const newHero = {\n      id: uuidv4(),\n      name: heroName,\n      description: heroDescr,\n      element: heroElement,\n    };\n    // Send data to the server in JSON format\n    // ONLY if the request is successful - send the character to the store\n\n    request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n      .then((res) => console.log(\"Sending successful\"))\n      .then(dispatch(heroCreated(newHero)))\n      .catch((err) => console.log(err));\n\n    // Clear the form after submitting\n\n    setHeroName(\"\");\n    setHeroDescr(\"\");\n    setHeroElement(\"\");\n  };\n\n  const renderFilters = (filters, status) => {\n    if (status === \"loading\") {\n      return <option>Loading items</option>;\n    } else if (status === \"error\") {\n      return <option>Loading error</option>;\n    }\n\n    // If there are filters, then render them\n\n    if (filters && filters.length > 0) {\n      return filters.map(({ name, label }) => {\n        if (name === \"all\") return;\n\n        return (\n          <option key={name} value={name}>\n            {label}\n          </option>\n        );\n      });\n    }\n  };\n\n  return (\n    <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"form-label fs-4\">\n          New hero's name\n        </label>\n        <input\n          required\n          type=\"text\"\n          name=\"name\"\n          className=\"form-control\"\n          id=\"name\"\n          placeholder=\"What is my name?\"\n          value={heroName}\n          onChange={(e) => setHeroName(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"text\" className=\"form-label fs-4\">\n          Description\n        </label>\n        <textarea\n          required\n          name=\"text\"\n          className=\"form-control\"\n          id=\"text\"\n          placeholder=\"What can i do?\"\n          style={{ height: \"130px\" }}\n          value={heroDescr}\n          onChange={(e) => setHeroDescr(e.target.value)}\n        />\n      </div>\n\n      <div className=\"mb-3\">\n        <label htmlFor=\"element\" className=\"form-label\">\n          Select hero element\n        </label>\n        <select\n          required\n          className=\"form-select\"\n          id=\"element\"\n          name=\"element\"\n          value={heroElement}\n          onChange={(e) => setHeroElement(e.target.value)}\n        >\n          <option value=\"\">I own the item...</option>\n          {renderFilters(filters, filtersLoadingStatus)}\n        </select>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Create\n      </button>\n    </form>\n  );\n};\n\nexport default HeroesAddForm;\n","import { useHttp } from \"../../hooks/http.hook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport classNames from \"classnames\";\n\nimport {\n  filtersFetching,\n  filtersFetched,\n  filtersFetchingError,\n  activeFilterChanged,\n} from \"../../actions\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n\nconst HeroesFilters = () => {\n  const { filters, filtersLoadingStatus, activeFilter } = useSelector(\n    (state) => state\n  );\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  // Запрос на сервер для получения фильтров и последовательной смены состояния\n  useEffect(() => {\n    dispatch(filtersFetching());\n    request(\"http://localhost:3001/filters\")\n      .then((data) => dispatch(filtersFetched(data)))\n      .catch(() => dispatch(filtersFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (filtersLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (filtersLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Loading error</h5>;\n  }\n\n  const renderFilters = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">No filters found</h5>;\n    }\n\n    // Данные в json-файле я расширил классами и текстом\n    return arr.map(({ name, className, label }) => {\n      // Используем библиотеку classnames и формируем классы динамически\n      const btnClass = classNames(\"btn\", className, {\n        active: name === activeFilter,\n      });\n\n      return (\n        <button\n          key={name}\n          id={name}\n          className={btnClass}\n          onClick={() => dispatch(activeFilterChanged(name))}\n        >\n          {label}\n        </button>\n      );\n    });\n  };\n\n  const elements = renderFilters(filters);\n\n  return (\n    <div className=\"card shadow-lg mt-4\">\n      <div className=\"card-body\">\n        <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n        <div className=\"btn-group\">{elements}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n  heroes: [],\n  heroesLoadingStatus: \"idle\",\n  filters: [],\n  filtersLoadingStatus: \"idle\",\n  activeFilter: \"all\",\n  filteredHeroes: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"HEROES_FETCHING\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"loading\",\n      };\n    case \"HEROES_FETCHED\":\n      return {\n        ...state,\n        heroes: action.payload,\n        // ЭТО МОЖНО СДЕЛАТЬ И ПО ДРУГОМУ\n        // Я специально показываю вариант с действиями тут, но более правильный вариант\n        // будет показан в следующем уроке\n        filteredHeroes:\n          state.activeFilter === \"all\"\n            ? action.payload\n            : action.payload.filter(\n                (item) => item.element === state.activeFilter\n              ),\n        heroesLoadingStatus: \"idle\",\n      };\n    case \"HEROES_FETCHING_ERROR\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"error\",\n      };\n    case \"FILTERS_FETCHING\":\n      return {\n        ...state,\n        filtersLoadingStatus: \"loading\",\n      };\n    case \"FILTERS_FETCHED\":\n      return {\n        ...state,\n        filters: action.payload,\n        filtersLoadingStatus: \"idle\",\n      };\n    case \"FILTERS_FETCHING_ERROR\":\n      return {\n        ...state,\n        filtersLoadingStatus: \"error\",\n      };\n    case \"ACTIVE_FILTER_CHANGED\":\n      return {\n        ...state,\n        activeFilter: action.payload,\n        filteredHeroes:\n          action.payload === \"all\"\n            ? state.heroes\n            : state.heroes.filter((item) => item.element === action.payload),\n      };\n    // Самая сложная часть - это показывать новые элементы по фильтрам\n    // при создании или удалении\n    case \"HERO_CREATED\":\n      // Формируем новый массив\n      let newCreatedHeroList = [...state.heroes, action.payload];\n      return {\n        ...state,\n        heroes: newCreatedHeroList,\n        // Фильтруем новые данные по фильтру, который сейчас применяется\n        filteredHeroes:\n          state.activeFilter === \"all\"\n            ? newCreatedHeroList\n            : newCreatedHeroList.filter(\n                (item) => item.element === state.activeFilter\n              ),\n      };\n    case \"HERO_DELETED\":\n      // Формируем новый массив\n      const newHeroList = state.heroes.filter(\n        (item) => item.id !== action.payload\n      );\n      return {\n        ...state,\n        heroes: newHeroList,\n        // Фильтруем новые данные по фильтру, который сейчас применяется\n        filteredHeroes:\n          state.activeFilter === \"all\"\n            ? newHeroList\n            : newHeroList.filter((item) => item.element === state.activeFilter),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}