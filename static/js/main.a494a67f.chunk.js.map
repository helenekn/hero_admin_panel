{"version":3,"sources":["components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","hooks/http.hook.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/index.js","store/index.js","index.js"],"names":["HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","useSelector","state","heroes","heroesLoadingStatus","dispatch","useDispatch","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","useEffect","then","payload","heroesFetched","catch","id","console","log","heroDeleted","err","arr","elements","length","map","props","HeroesAddForm","htmlFor","required","placeholder","value","HeroesFilters","App","initialState","filters","reducer","action","filter","item","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a494a67f.chunk.js","sourcesContent":["const HeroesListItem = ({ name, description, element, onDelete }) => {\n  let elementClassName;\n\n  switch (element) {\n    case \"fire\":\n      elementClassName = \"bg-danger bg-gradient\";\n      break;\n    case \"water\":\n      elementClassName = \"bg-primary bg-gradient\";\n      break;\n    case \"wind\":\n      elementClassName = \"bg-success bg-gradient\";\n      break;\n    case \"earth\":\n      elementClassName = \"bg-secondary bg-gradient\";\n      break;\n    default:\n      elementClassName = \"bg-warning bg-gradient\";\n  }\n\n  return (\n    <li\n      className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n    >\n      <img\n        src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\"\n        className=\"img-fluid w-25 d-inline\"\n        alt=\"unknown hero\"\n        style={{ objectFit: \"cover\" }}\n      />\n      <div className=\"card-body\">\n        <h3 className=\"card-title\">{name}</h3>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n        <button\n          onClick={onDelete}\n          type=\"button\"\n          className=\"btn-close btn-close\"\n          aria-label=\"Close\"\n        ></button>\n      </span>\n    </li>\n  );\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from \"../../hooks/http.hook\";\nimport { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  heroesFetching,\n  heroesFetched,\n  heroesFetchingError,\n  heroDeleted,\n} from \"../../actions\";\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from \"../spinner/Spinner\";\n\n// Задача для этого компонента:\n// При клике на \"крестик\" идет удаление персонажа из общего состояния\n// Усложненная задача:\n// Удаление идет и с json файла при помощи метода DELETE\n\nconst HeroesList = () => {\n  const { heroes, heroesLoadingStatus } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { request } = useHttp();\n\n  useEffect(() => {\n    dispatch(heroesFetching());\n    request(\"http://localhost:3001/heroes\")\n      .then((data) => dispatch(heroesFetched(data)))\n      .catch(() => dispatch(heroesFetchingError()));\n\n    // eslint-disable-next-line\n  }, []);\n\n  const onDelete = useCallback(\n    (id) => {\n      request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n        .then((data) => console.log(data, \"Deleted\"))\n        .then(dispatch(heroDeleted(id)))\n        .catch((err) => console.log(err));\n    },\n    [request]\n  );\n\n  if (heroesLoadingStatus === \"loading\") {\n    return <Spinner />;\n  } else if (heroesLoadingStatus === \"error\") {\n    return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>;\n  }\n\n  const renderHeroesList = (arr) => {\n    if (arr.length === 0) {\n      return <h5 className=\"text-center mt-5\">Героев пока нет</h5>;\n    }\n\n    return arr.map(({ id, ...props }) => {\n      return (\n        <HeroesListItem key={id} onDelete={() => onDelete(id)} {...props} />\n      );\n    });\n  };\n\n  const elements = renderHeroesList(heroes);\n  return <ul>{elements}</ul>;\n};\n\nexport default HeroesList;\n","import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    }, []);\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","export const heroesFetching = () => {\n  return {\n    type: \"HEROES_FETCHING\",\n  };\n};\n\nexport const heroesFetched = (heroes) => {\n  return {\n    type: \"HEROES_FETCHED\",\n    payload: heroes,\n  };\n};\n\nexport const heroesFetchingError = () => {\n  return {\n    type: \"HEROES_FETCHING_ERROR\",\n  };\n};\nexport const heroDeleted = (id) => {\n  return {\n    type: \"HERO_DELETED\",\n    payload: id,\n  };\n};\n","\n\n// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nconst HeroesAddForm = () => {\n    return (\n        <form className=\"border p-4 shadow-lg rounded\">\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\">\n                    <option >Я владею элементом...</option>\n                    <option value=\"fire\">Огонь</option>\n                    <option value=\"water\">Вода</option>\n                    <option value=\"wind\">Ветер</option>\n                    <option value=\"earth\">Земля</option>\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n// Изменять json-файл для удобства МОЖНО!\n// Представьте, что вы попросили бэкенд-разработчика об этом\n\nconst HeroesFilters = () => {\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    <button className=\"btn btn-outline-dark active\">Все</button>\n                    <button className=\"btn btn-danger\">Огонь</button>\n                    <button className=\"btn btn-primary\">Вода</button>\n                    <button className=\"btn btn-success\">Ветер</button>\n                    <button className=\"btn btn-secondary\">Земля</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\n  heroes: [],\n  heroesLoadingStatus: \"idle\",\n  filters: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"HEROES_FETCHING\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"loading\",\n      };\n    case \"HEROES_FETCHED\":\n      return {\n        ...state,\n        heroes: action.payload,\n        heroesLoadingStatus: \"idle\",\n      };\n    case \"HEROES_FETCHING_ERROR\":\n      return {\n        ...state,\n        heroesLoadingStatus: \"error\",\n      };\n    case \"HERO_DELETED\":\n      return {\n        ...state,\n        heroes: state.heroes.filter((item) => item.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}